# Use the official AlpineLinux as the base image
FROM alpine:3.19

# Set the Node.js version to be installed
ENV NODE_VERSION 20.15.0

# Create a user and group for running the Node.js application
RUN addgroup -g 1000 node \ 
    && adduser -u 1000 -G node -s /bin/sh -D node \ 
    # Install necessary dependencies
    && apk add --no-cache \ 
        libstdc++ \ 
    # Install build dependencies
    && apk add --no-cache --virtual .build-deps \ 
        curl \ 
    # Download the Node.js binary for the specific version and architecture
    && curl -fsSLO --compressed "https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64-musl.tar.xz" \ 
    # Extract the downloaded tarball to /usr/local
    && tar -xJf "node-v$NODE_VERSION-linux-x64-musl.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \ 
    # Create a symbolic link for nodejs
    && ln -s /usr/local/bin/node /usr/local/bin/nodejs \ 
    # Clean up the tarball and build dependencies
    && rm -f "node-v$NODE_VERSION-linux-x64-musl.tar.xz" \ 
    && apk del .build-deps

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json files to the working directory
COPY package*.json ./

# Install Node.js dependencies
RUN npm install

# Copy the rest of the application code to the container
COPY . .

# Expose the port the backend application runs on
EXPOSE 3000

# Set the command to start the backend server
CMD ["node", "server.js"]
 
